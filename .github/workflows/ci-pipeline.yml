# .github/workflows/ci-pipeline.yml

name: PDV Web CI Pipeline

# Gatilhos: Roda em pushes para a branch main e em pull requests
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  # Job para validar o código do Frontend
  validate-frontend:
    # O tipo de máquina virtual para rodar o job
    runs-on: ubuntu-latest

    # Define o diretório de trabalho
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      # Roda com a versão 18.x do Node.js
      matrix:
        node-version: [18.x]

    steps:
      # 1. Faz o checkout do código do repositório
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configura o ambiente Node.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # 3. Instala as dependências
      - name: Install dependencies
        run: npm install

      # 3.1. Roda o npm audit para verificar vulnerabilidades de segurança
      - name: Run npm audit
        run: npm audit --production --audit-level=high

      # 4. Roda o Linter para verificar a qualidade do código
      - name: Run linter
        run: npm run lint

      # 5. Roda o build para garantir que a aplicação compila sem erros
      - name: Run build
        run: npm run build

      # 6. Roda os testes unitários e de integração do frontend
      - name: Run frontend tests
        run: npm test

      # O passo de teste E2E com Cypress será adicionado em uma etapa futura,
      # pois requer uma configuração mais complexa (como iniciar um servidor).
      # - name: Run E2E tests
      #   run: npm run cypress:run

  # Job para validar o código do Backend
  validate-backend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm install

      # 3.1. Roda o npm audit para verificar vulnerabilidades de segurança
      - name: Run npm audit
        run: npm audit --production --audit-level=high

      - name: Run backend tests
        run: npm test

      - name: Run backend linter
        run: npm run lint